

ROUTING ANGUKAR :::: https://angular.io/tutorial/toh-pt5


https://angular.io/guide/quickstart


Step1.

ng new my-app

Step2.

cd my-app
ng serve --open


Routing
------------------
ng generate module app-routing --flat --module=app

src/app/app-routing.module.ts (generated)

import { NgModule, Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DashboardComponent } from './dashboard/dashboard.component';
import { RouterModule, Routes } from '@angular/router';
const routes: Routes = [
  { path: 'dashboard', component: DashboardComponent }
];
@NgModule({
  exports: [ RouterModule ],
  imports: [ RouterModule.forRoot(routes) ],
})
export class AppRoutingModule {}
 


New Component  creation
--------------------------------
ng generate component dashboard(component name)


=====================================================
****************************************************************************************************************************************************

Form Creation

<form class="new-form" [formGroup]="createStore">
                                    <div class="form-group row">
                                        <label class="col-md-4 col-form-label" style="font-weight: 700;">Store Type</label>
                                        <div class="col-md-8 row">
                                            <label style="padding-top: 10px;"> 
                                                <input type="radio" formControlName="storeType" name="storeType" value="{{storeTypeObj.storeTypePortal}}" (click)="displayTestDataFlg(storeTypeObj.storeTypePortal)" [attr.disabled]="disableOptionEditStore ? 'true' : null" /> Portal Only &nbsp;
                                            </label>
                                        </div>
                                    </div>
                                    <div class="form-group" [ngClass]="displayFieldCssCreateStore('storeName')">
                                        <label class="col-form-label" style="font-weight: 700;">Store Name<span class="required"> *</span>
                                           
                                        </label>
                                        <div>
                                            <input type="text" class="form-control" id="storeName" formControlName="storeName" (keyup)="clearNameValidationMessage(3)" [attr.disabled]="!editStoreNameFlag ? 'true' : null">
                                            
                                        </div>
                                    </div>                                  
                                    <div class="form-group row" *ngIf="testTagDisplayStoreCreation">
                                        <label class="col-md-5 col-form-label" style="font-weight: 700;">{{testDataLabel}}</label>
                                        <div class="col-md-7 row">
                                            <label style="padding-top: 10px;"> 
                                                <input type="checkbox" [checked]="defaultTestDataFlag" formControlName="testDataTag" name="testDataTag" [attr.disabled]="!createStoreFlag ? 'true' : null" />
                                            </label>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button *ngIf="createStoreFlag" type="button" class="btn btn-secondary" (click)="closeCreateStoreModal()">Close</button>
                                        <button *ngIf="!createStoreFlag" [disabled]="disableCloseButtonStore" type="button" class="btn btn-secondary" (click)="disableCloseButtonStore ? '' : closeCreateStoreModal()">Close</button>
                                        <button type="button" *ngIf="createStoreFlag" [disabled]="showSpinnerStoreButton" (click)="createStoreFlag ? onSubmit('') : onUpdateStore()" class="btn btn-primary pointer"><em *ngIf="showSpinnerStoreButton" class="fa fa-spinner fa-pulse fa-1x fa-fw"></em> {{createStoreFlag ? 'Submit' : 'Update' }} </button>&nbsp;
                                    </div>
                                </form>


Component :::
----------------------
import { FormControl, FormGroup, Validators, FormArray, FormBuilder, AbstractControl } from '@angular/forms';

export class StoreSearcherComponent implements OnInit {

  createStore: FormGroup;



this.createStore = new FormGroup({
      storeType: new FormControl('', Validators.required),
      testDataTag: new FormControl(''),
      storeGroup: new FormControl(''),
      storeName: new FormControl('', Validators.required),
      brand: new FormControl('', Validators.required),
      state: new FormControl('', Validators.required),
      dmsCode: new FormControl('', Validators.required),
      assignedTo: new FormControl(''),
      assignedToSalesPerson: new FormControl('')
    });


get value

let objects360: any = {
          sgCompanyId: this.selectedStoreGroupCompanyId,
          storeName: this.createStore.get('storeName').value,
          brandName: this.createStore.get('brand').value[0].item,
          state: this.createStore.get('state').value[0].item,
          storeType: this.createStore.get('storeType').value,
          testTag: this.createStore.get('testDataTag').value,
          dmsCode: this.createStore.get('dmsCode').value[0].itemName
        }

***********************************************************************

http :: ajax call
=======================================

import { Component } from '@angular/core';
import { Http } from '@angular/http';

@Component({
  selector: 'http-app',
  templateUrl: 'people.html'
})
class PeopleComponent {
  constructor(http: Http) {
    http.get('people.json')
      // Call map on the response observable to get the parsed people object
      .map(res => res.json())
      // Subscribe to the observable to get the parsed people object and attach it to the
      // component
      .subscribe(people => this.people = people);
  }
}

//POST
nSubmit(value: any) {
    //console.log(value.message);
    let headers = new Headers({ 'Content-Type': 'application/json'});
    let options = new RequestOptions({ headers: headers });
    let body = JSON.stringify(value);
    this.http.post('127.0.0.1/myProject/insertData.php', body, headers)
                .subscribe(
                    () => {alert("Success")}, //For Success Response
                    err => {console.error(err)} //For Error Response
                );                
    }   


********************************************************************************************

BOOTSRAP :::::::::
=====================

npm install --save bootstrap


afterwards, inside angular-cli.json (inside the project's root folder), find styles and add the bootstrap css file like this:

"styles": [
   "../node_modules/bootstrap/dist/css/bootstrap.min.css",
],



 "scripts": [
        "../node_modules/bootstrap/dist/js/jquery.min.js",
        "../node_modules/bootstrap/dist/js/bootstrap.js"

      ],

download and put it in bootsreap folder (jquery)

https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js


Include bootsrap table 
-----------------------------
<div class="container">
  <div class="row">
    <div class="col-md-12">
      <h4>Bootstrap Snipp for Datatable</h4>
      <div class="table-responsive">
        <table id="mytable" class="table table-bordred table-striped">
          <thead>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Address</th>
            <th>Email</th>
            <th>Contact</th>
            <th>Edit</th>
            <th>Delete</th>
          </thead>
          <tbody>
            <ng-container *ngFor="let item of data; let myIndex = index">
              <tr>
                <td>{{item.name}}</td>
                <td>{{item.lname}}</td>
                <td>CB 106/107 Street # 11 Wah Cantt Islamabad Pakistan</td>
                <td>isometric.mohsin@gmail.com</td>
                <td>+923335586757</td>
                <td>
                  <p data-placement="top" data-toggle="tooltip" title="Edit" (click)="editModal()"><button class="btn btn-primary btn-xs"
                      data-title="Edit" data-toggle="modal" data-target="#edit"><span class="glyphicon glyphicon-pencil"></span></button></p>
                </td>
                <td>
                  <p data-placement="top" data-toggle="tooltip" title="Delete"><button class="btn btn-danger btn-xs"
                      data-title="Delete" data-toggle="modal" data-target="#delete"><span class="glyphicon glyphicon-trash"></span></button></p>
                </td>
              </tr>
            </ng-container>            
          </tbody>
        </table>
        <div class="clearfix"></div>
      </div>

    </div>
  </div>
</div>

<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
  <div class="modal-dialog">
    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Modal Header</h4>
      </div>
      <div class="modal-body">
        <p>Some text in the modal.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>

  </div>
</div>

Inside component 
--------------------

this.data = [
      {name : "Mohsin",lname:"Irshad",address:"106/107 Street # 11 Wah Cantt Islamabad Pakistan",
      email:"isometric.mohsin@gmail.com",phno:"923335586757"},{name : "Mohsin",lname:"Irshad",address:"106/107 Street # 11 Wah Cantt Islamabad Pakistan",
      email:"isometric.mohsin@gmail.com",phno:"923335586757"},{name : "Mohsin",lname:"Irshad",address:"106/107 Street # 11 Wah Cantt Islamabad Pakistan",
      email:"isometric.mohsin@gmail.com",phno:"923335586757"},{name : "Mohsin",lname:"Irshad",address:"106/107 Street # 11 Wah Cantt Islamabad Pakistan",
      email:"isometric.mohsin@gmail.com",phno:"923335586757"},{name : "Mohsin",lname:"Irshad",address:"106/107 Street # 11 Wah Cantt Islamabad Pakistan",
      email:"isometric.mohsin@gmail.com",phno:"923335586757"},{name : "Mohsin",lname:"Irshad",address:"106/107 Street # 11 Wah Cantt Islamabad Pakistan",
      email:"isometric.mohsin@gmail.com",phno:"923335586757"},{name : "Mohsin",lname:"Irshad",address:"106/107 Street # 11 Wah Cantt Islamabad Pakistan",
      email:"isometric.mohsin@gmail.com",phno:"923335586757"},{name : "Mohsin",lname:"Irshad",address:"106/107 Street # 11 Wah Cantt Islamabad Pakistan",
      email:"isometric.mohsin@gmail.com",phno:"923335586757"},{name : "Mohsin",lname:"Irshad",address:"106/107 Street # 11 Wah Cantt Islamabad Pakistan",
      email:"isometric.mohsin@gmail.com",phno:"923335586757"},
    ];


  editModal() {
    $('#myModal').modal('show');
  }




Loop Data
----------------------

<div *ngFor="let item of items; let myIndex = index>
  {{myIndex}}
</div>


******************************************















